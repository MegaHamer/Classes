Index: src/main/kotlin/Main.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.lang.Math.pow\r\nimport kotlin.math.sqrt\r\nfun main() {\r\n    val ArrDot = mutableMapOf(\"A\" to Dot(2,8),\"B\" to Dot(5,3),\"C\" to Dot(10,7),\"D\" to Dot(-6,3),\"E\" to Dot(5,1),\"F\" to Dot(-1,-2))\r\n    val ArrTri:MutableMap<String,Trigon> = mutableMapOf()\r\n    ArrTri+=(\"ABC\" to Trigon(ArrDot[\"A\"]!!, ArrDot[\"B\"]!!, ArrDot[\"C\"]!!))\r\n    ArrTri.put(\"DEF\",Trigon(ArrDot[\"D\"]!!,ArrDot[\"E\"]!!,ArrDot[\"F\"]!!))\r\n    while (true) {\r\n        println(\"Выберите область работы:\\n1.Точки\\n2.Треугольники\\n3 или /.Выход\")\r\n        when (readln()) {\r\n            \"1\" -> {\r\n                //Посмотреть имеющиеся точку или точки на выбор, по умолчанию есть несколько+\r\n                //Посмотреть на длину между 2 точками+\r\n                //Узнать самую большую и маленькую длинны между 3 и более точками на выбор+\r\n                //Изменить имеющуюся точку или точки на выбор+\r\n                //Создать новую точку или точки+\r\n                //Удалить точку или точки на выбор+\r\n                //Выход+\r\n                while (true) {\r\n                    println(\r\n                        \"\\n\\n./Точки\\nВыберите дествие:\\n\" +\r\n                                \"1.Посмотреть имеющиеся точку или точки на выбор\\n\" +\r\n                                \"2.Посмотреть на длину между двумя точками\\n\" +\r\n                                \"3.Узнать самую большую и маленькую длинны между 3 и более точками на выбор\\n\" +\r\n                                \"4.Изменить имеющуюся точку или точки на выбор\\n\" +\r\n                                \"5.Создать новую точку или точки\\n\" +\r\n                                \"6.Удалить точку или точки на выбор\\n\" +\r\n                                \"7 или /.Выход\\n\"\r\n                    )\r\n                    when (readln()) {\r\n                        \"1\" -> { //Посмотреть имеющиеся точку или точки на выбор, по умолчанию есть несколько+\r\n                            while(true){\r\n                                println(\"\\n\\n./Точки/Список точек\")\r\n                                if (ArrDot.size !=0){\r\n                                    println(\"Есть такие точки:\")\r\n                                    for (i in ArrDot.keys){\r\n                                        print(\"${i} \")\r\n                                    }\r\n                                    println()\r\n                                }\r\n                                else{\r\n                                    println(\"Точек нет\")\r\n                                }\r\n                                println(\"Выберите дейстиве:\\n1.Посмотреть координаты точки\\n2 или /.Выход\")\r\n                                when(readln()){\r\n                                    \"1\"->{\r\n                                        println(\"\\n\\n./Точки/Список точек/Координаты\")\r\n                                        if (ArrDot.size !=0){\r\n                                            println(\"Есть такие точки:\")\r\n                                            for (i in ArrDot.keys){\r\n                                                print(\"${i} \")\r\n                                            }\r\n                                            println()\r\n                                        }\r\n                                        else{\r\n                                            println(\"Точек нет\")\r\n                                            continue\r\n                                        }\r\n                                        println(\"Выберите точку(-и) которую(-ые) вы хотите посмотреть через пробел \\n(или посмотреть все вводом 'Все')\")\r\n                                        val cc = readln().split(\" \")\r\n\r\n                                        if (\"Все\" in cc){\r\n                                            for (j in ArrDot.keys){\r\n                                                println(\"Координаты точки ${j} (${ArrDot[j]!!.x};${ArrDot[j]!!.y})\")\r\n                                            }\r\n                                            continue\r\n                                        }\r\n                                        else\r\n                                        for (i in cc){\r\n                                            if (i in ArrDot.keys){\r\n                                                println(\"Координаты точки ${i} (${ArrDot[i]!!.x};${ArrDot[i]!!.y})\")\r\n                                            }\r\n                                            else{\r\n                                                println(\"Точки ${i} не существует\")\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    \"2\",\"/\"->{break}\r\n                                    else-> println(\"Такого варианта нет\")\r\n                                }\r\n                            }\r\n\r\n\r\n                        }\r\n                        \"2\" -> { //Посмотреть на длину между 2 точками+\r\n                            while(true){\r\n                                println(\"\\n\\n./Точки/Расстояние между точками\")\r\n                                if (ArrDot.size !=0){\r\n                                    println(\"Есть такие точки:\")\r\n                                    for (i in ArrDot.keys){\r\n                                        print(\"${i} \")\r\n                                    }\r\n                                    println()\r\n                                }\r\n                                else{\r\n                                    println(\"Точек нет\")\r\n                                }\r\n                                println(\"Введите две точки через пробел (для выхода '/')\")\r\n                                println(\"или точки вида '1;2' через пробел\")\r\n                                val cc = readln().split(\" \")\r\n                                if ('/' in cc.joinToString(\"\").toCharArray()){\r\n                                    break\r\n                                }\r\n                                var dot:Array<Dot> = arrayOf()//точки между которыми будет измерятся расстояние\r\n                                for (i in cc){//получаю точки\r\n                                    if (i in ArrDot.keys){//есть точка в списке\r\n                                        if (dot.size ==0){\r\n                                            dot += ArrDot[i]!!\r\n                                        }\r\n                                        else{\r\n                                            dot += ArrDot[i]!!\r\n                                        }\r\n                                    }\r\n                                    else{\r\n                                        if (';' in i.toCharArray()){//точка из x и y\r\n                                            val digits = i.split(\";\")\r\n                                            if (dot.size == 0){\r\n                                                dot += Dot(digits[0].toDouble(),digits[1].toDouble())\r\n                                            }\r\n                                            else{\r\n                                                dot += Dot(digits[0].toDouble(),digits[1].toDouble())\r\n                                            }\r\n                                        }\r\n                                        else{//точки нет в списке или неправильно ввели\r\n                                            println(\"Такой точки нет или вы неверно указали\")\r\n                                            break\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (dot.size>=2)\r\n                                println(\"Длинна между точками ${dot[0].x};${dot[0].y} и ${dot[1].x};${dot[1].y} равна ${dot[0].lenght(dot[1])}\")\r\n                            }\r\n                        }\r\n                        \"3\" -> {  //Узнать самую большую и маленькую длинны между 3 и более точками на выбор+-\r\n                            var dd:Array<Dot> = arrayOf()//массив точек для передачи в фунции\r\n                            while(true){\r\n                                println(\"\\n\\n./Точки/Большая маленькая\")\r\n                                if (ArrDot.size !=0){\r\n                                    println(\"Есть такие точки:\")\r\n                                    for (i in ArrDot.keys){\r\n                                        print(\"${i} (${ArrDot[i]!!.x};${ArrDot[i]!!.y})  \")\r\n                                    }\r\n                                    println()\r\n                                }\r\n                                else{\r\n                                    println(\"Точек нет\")\r\n                                }\r\n                                println(\"Точки участвующие в вычислении: \")\r\n                                for (j in dd){\r\n                                    print(\" (${j.x};${j.y}) \")\r\n                                }\r\n                                println()\r\n                                println(\"Введите точки из списка или в формате '1;2'(более 2)\")\r\n                                println(\"Для вывода результата самой большой и маленьких длинн между точками введите '='\")\r\n                                println(\"Очистить список точек участвующих в вычислении - '*'\")\r\n                                println(\"Выход - '/'\")\r\n                                val cc = readln().split(\" \")\r\n                                if ('/' in cc.joinToString(\"\").toCharArray()){\r\n                                    break\r\n                                }\r\n                                if ('*' in cc.joinToString(\"\").toCharArray()){\r\n                                    println(\"Точки стерты\")\r\n                                    dd= arrayOf()\r\n                                    continue\r\n                                }\r\n                                if ('=' in cc.joinToString(\"\").toCharArray()){\r\n                                    if (dd.size<3){\r\n                                        println(\"Недостаточкно точек\")\r\n                                    }\r\n                                    else{\r\n                                        print(\"Точки: \")\r\n                                        for (j in dd){\r\n                                            print(\" (${j.x};${j.y}) \")\r\n                                        }\r\n                                        println()\r\n                                        println(\"Самая большая длинна между точками: ${maxLengt(*dd)}\")\r\n                                        println(\"Самая маленькая длинна между точками: ${minLengt(*dd)}\")\r\n                                    }\r\n                                    continue\r\n                                }\r\n                                for (i in cc){\r\n                                    if (i in ArrDot.keys){\r\n                                        var repeat = false\r\n                                        for (lk in dd){\r\n                                            if (ArrDot[i]!!.x == lk.x && ArrDot[i]!!.y == lk.y){\r\n                                                println(\"Точка (${ArrDot[i]!!.x};${ArrDot[i]!!.y}) уже есть\")\r\n                                                repeat=true\r\n                                            }\r\n                                        }\r\n                                        if (!repeat){\r\n                                            dd+=(ArrDot[i]!!)\r\n                                        }\r\n                                    }\r\n                                    else{\r\n                                        if ( haveLetter( listOf(i) ) ){\r\n                                            println(\"Точки ${i} нет в списке\")\r\n                                        }\r\n                                        else{\r\n                                            val cords = i.split(\";\")\r\n                                            if (cords.size>=2){\r\n                                                var repeat = false\r\n                                                for (lk in dd){\r\n                                                    if (cords[0].toDouble() == lk.x && cords[1].toDouble() == lk.y){\r\n                                                        println(\"Точка (${cords[0].toDouble()};${cords[1].toDouble()}) уже есть\")\r\n                                                        repeat=true\r\n                                                    }\r\n                                                }\r\n                                                if (!repeat){\r\n                                                    dd+=Dot(cords[0].toDouble(),cords[1].toDouble())\r\n                                                }\r\n                                            }\r\n                                            else{\r\n                                                println(\"Неверно указаны координаты\")\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                        \"4\" -> { //Изменить имеющуюся точку или точки на выбор+\r\n                            while(true){\r\n                                println(\"\\n\\n./Точки/Изменить точки\")\r\n                                if (ArrDot.size !=0){\r\n                                    println(\"Есть такие точки:\")\r\n                                    for (i in ArrDot.keys){\r\n                                        print(\"${i} \")\r\n                                    }\r\n                                    println()\r\n                                    println(\"Введите точку(-и), которые вы хотите изменить через пробел \\n(выход- '/')\")\r\n                                    val cc = readln().split(\" \")\r\n                                    if ('/' in cc.joinToString(\"\").toCharArray()){\r\n                                        break\r\n                                    }\r\n                                    var leave = false\r\n                                    for (i in cc){\r\n                                        if (leave){\r\n                                            break\r\n                                        }\r\n                                        var boo = true\r\n                                        while (boo){\r\n                                            if (i in ArrDot.keys){\r\n                                                println(\"Точка ${i} (${ArrDot[i]!!.x};${ArrDot[i]!!.y})\")\r\n                                                println(\"Введите новые координаты точки через пробел (скип - '*', закончить - '/')\")\r\n                                                val pp = readln().split(\" \")\r\n                                                if (haveLetter(pp)){\r\n                                                    println(\"Неправильно введены координаты\")\r\n                                                    continue\r\n                                                }\r\n                                                if ('*' in pp.joinToString().toCharArray()){\r\n                                                    break\r\n                                                }\r\n                                                if ('/' in cc.joinToString(\"\").toCharArray()){\r\n                                                    leave=true\r\n                                                    break\r\n                                                }\r\n                                                if (pp.size >1){\r\n                                                    ArrDot[i]!!.x=pp[0].toDouble()\r\n                                                    ArrDot[i]!!.y=pp[1].toDouble()\r\n                                                    boo=false\r\n                                                }\r\n                                                else {\r\n                                                    println(\"Недостаточно координат\")\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                println(\"Точки ${i} нет\")\r\n                                                boo=false\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    println(\"Точек нет\")\r\n                                    break\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                        \"5\" -> {//Создать новую точку или точки+\r\n                            while(true){\r\n                                println(\"\\n\\n./Точки/Создать\")\r\n                                printDot(ArrDot)\r\n                                if (ArrDot.size>0){\r\n                                    println(\"Введите имя(имена) точки(-ек) для создания, через пробел\")\r\n                                    println(\"Выход - '/'\")\r\n                                    val cc = readln().split(\" \")\r\n                                    if ('/' in cc.joinToString(\"\").toCharArray()){\r\n                                        break\r\n                                    }\r\n                                    var leave=false\r\n                                    for (i in cc){\r\n                                        if (leave){\r\n                                            break\r\n                                        }\r\n                                        while (true){\r\n                                            if (i in ArrDot.keys){\r\n                                                println(\"Точка с именем ${i} уже есть\")\r\n                                                break\r\n                                            }\r\n                                            else{\r\n                                                println(\"Введите координаты точке ${i} через пробел\")\r\n                                                println(\"Скип - '*' Выход - '/'\")\r\n                                                val kk = readln().split(\" \")\r\n                                                if ('/' in kk.joinToString(\"\").toCharArray()){\r\n                                                    leave=true\r\n                                                    break\r\n                                                }\r\n                                                if ('*' in kk.joinToString(\"\").toCharArray()){\r\n                                                    break\r\n                                                }\r\n                                                if (haveLetter(kk)){\r\n                                                    println(\"Координаты введены неверно\")\r\n                                                    continue\r\n                                                }\r\n                                                else{\r\n                                                    ArrDot.put(i,Dot(kk[0].toDouble(),kk[1].toDouble()))\r\n                                                    break\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        \"6\" -> { //Удалить точку или точки на выбор+\r\n                            while(true){\r\n                                println(\"\\n\\n./Точки/Удалить\")\r\n                                printDot(ArrDot)\r\n                                if (ArrDot.size>0){\r\n                                    println(\"Введите точку(-и) для удаления через пробел\")\r\n                                    println(\"Удалить все точки - 'Все'\")\r\n                                    println(\"Выход - '/'\")\r\n                                    val cc = readln().split(\" \")\r\n                                    if ('/' in cc.joinToString(\"\").toCharArray()){\r\n                                        break\r\n                                    }\r\n                                    if (\"Все\" in cc){\r\n                                            ArrDot.clear()\r\n                                        continue\r\n                                    }\r\n                                    for (i in cc){\r\n                                        if (i in ArrDot.keys){\r\n                                            println(\"Точка ${i} (${ArrDot[i]!!.x};${ArrDot[i]!!.y}) далена\")\r\n                                            ArrDot.remove(i)\r\n                                        }\r\n                                        else{\r\n                                            println(\"Точки ${i} нет\")\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        \"7\",\"/\" -> {break}\r\n\r\n                        else -> println(\"Такого варианта нет\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            \"2\" -> {\r\n                //Посмотреть имеющиеся треугольники, по умолчанию есть 2+\r\n                //Узнать входит ли точка в треугольник+\r\n                //Узнать центр описанной окружности\r\n                //Узнать центр выписанной окружности\r\n                //Изменить имеющийся треугольник(его координаты) на выбор\r\n                //Добавить треугольник\r\n                //Удалить треугольники на выбор\r\n                //Выход\r\n                while (true){\r\n                    println(\r\n                        \"\\n\\n./Теугольники\\nВыберите дествие:\\n\" +\r\n                                \"1.Посмотреть имеющиеся треугольники\\n\" +\r\n                                \"2.Узнать входит ли точка в треугольник\\n\" +\r\n                                \"3.Узнать центр описанной окружности\\n\" +\r\n                                \"4.Узнать центр выписанной окружности\\n\" +\r\n                                \"5.Изменить имеющийся треугольник(его координаты) на выбор\\n\" +\r\n                                \"6.Добавить треугольник\\n\" +\r\n                                \"7.Удалить треугольники на выбор\\n\" +\r\n                                \"8 или /.Выход\\n\"\r\n                    )\r\n                    when (readln()) {\r\n                        \"1\" -> {//Посмотреть имеющиеся треугольники, по умолчанию есть 2\r\n                            while(true){\r\n                                println(\"\\n\\n./Треугольники/Список треугольников\")\r\n                                if (ArrDot.size !=0){\r\n                                    println(\"Есть такие треугольники:\")\r\n                                    for (i in ArrTri.keys){\r\n                                        print(\"${i} \")\r\n                                    }\r\n                                    println()\r\n                                }\r\n                                else{\r\n                                    println(\"Треугольников нет\")\r\n                                }\r\n                                println(\"Выберите дейстиве:\\n1.Посмотреть координаты точек треугольников\\n2 или /.Выход\")\r\n                                when(readln()){\r\n                                    \"1\"->{\r\n                                        println(\"\\n\\n./Треугольники/Список треугольников/Координаты точек\")\r\n                                        if (ArrTri.size !=0){\r\n                                            println(\"Есть такие треугольники:\")\r\n                                            for (i in ArrTri.keys){\r\n                                                print(\"${i} \")\r\n                                            }\r\n                                            println()\r\n                                        }\r\n                                        else{\r\n                                            println(\"Точек нет\")\r\n                                            continue\r\n                                        }\r\n                                        println(\"Выберите треугольник(-и) который(-ые) вы хотите посмотреть через пробел \\n(или посмотреть все вводом 'Все')\")\r\n                                        val cc = readln().split(\" \")\r\n\r\n                                        if (\"Все\" in cc){\r\n                                            for (j in ArrTri.keys){\r\n                                                println(\"Координаты треугольника ${j} (${ArrTri[j]!!.Dot1.x};${ArrTri[j]!!.Dot1.y}) (${ArrTri[j]!!.Dot2.x};${ArrTri[j]!!.Dot2.y}) (${ArrTri[j]!!.Dot3.x};${ArrTri[j]!!.Dot3.y})\")\r\n                                            }\r\n                                            continue\r\n                                        }\r\n                                        else\r\n                                            for (i in cc){\r\n                                                if (i in ArrTri.keys){\r\n                                                    println(\"Координаты треугольника ${i} (${ArrTri[i]!!.Dot1.x};${ArrTri[i]!!.Dot1.y}) (${ArrTri[i]!!.Dot2.x};${ArrTri[i]!!.Dot2.y}) (${ArrTri[i]!!.Dot3.x};${ArrTri[i]!!.Dot3.y})\")\r\n                                                }\r\n                                                else{\r\n                                                    println(\"Треугольника ${i} не существует\")\r\n                                                }\r\n                                            }\r\n                                    }\r\n                                    \"2\",\"/\"->{break}\r\n                                    else-> println(\"Такого варианта нет\")\r\n                                }\r\n                            }\r\n                        }\r\n                        \"2\" -> { //Узнать входит ли точка в треугольник\r\n                            while(true){\r\n                            println(\"\\n\\n./Треугольники/Точка в треугольнике\")\r\n                            printTri(ArrTri)\r\n                                println(\"Выберите объект\\n1.Треугольник из списка\\n2.Треугольник по трем точкам\\n3 или /.Выход\")\r\n                                when(readln()){\r\n                                    \"1\"->{\r\n                                        println(\"\\n\\n./Треугольники/Точка в треугольнике/Треугольник\")\r\n                                        printTri(ArrTri)\r\n                                        println(\"Введите имена треугольников\")\r\n                                        println(\"Выход - '/'\")\r\n                                        var cc = readln().split(\" \")\r\n                                        if ('/' in cc.joinToString(\"\").toCharArray()){\r\n                                            break\r\n                                        }\r\n                                        for (i in cc){\r\n                                            println(\"\\n\\n\")\r\n                                            if (i in ArrTri.keys){\r\n                                                if (ArrDot.size !=0){\r\n                                                    println(\"Есть такие точки:\")\r\n                                                    for (pppp in ArrDot.keys){\r\n                                                        println(\"${pppp} (${ArrDot[pppp]!!.x};${ArrDot[pppp]!!.y})\")\r\n                                                    }\r\n                                                }\r\n                                                else{\r\n                                                    println(\"Точек нет\")\r\n                                                }\r\n                                                println(\"Координаты треугольника ${i} (${ArrTri[i]!!.Dot1.x};${ArrTri[i]!!.Dot1.y}) (${ArrTri[i]!!.Dot2.x};${ArrTri[i]!!.Dot2.y}) (${ArrTri[i]!!.Dot3.x};${ArrTri[i]!!.Dot3.y})\")\r\n                                                println(\"Введите точки из списка или координаты вида '1;2' через пробел\")\r\n                                                println(\"Скип - '*'\")\r\n                                                println(\"Закончить - '/'\")\r\n                                                var ff = readln().split(\" \")\r\n                                                if ('/' in ff.joinToString(\"\").toCharArray()){\r\n                                                    break\r\n                                                }\r\n                                                if ('*' in ff.joinToString(\"\").toCharArray()){\r\n                                                    continue\r\n                                                }\r\n                                                for (j in ff){\r\n                                                    if (j in ArrDot.keys){\r\n                                                        print(\"Точка ${j} (${ArrDot[j]!!.x};${ArrDot[j]!!.x}) \")\r\n                                                        if (ArrTri[i]!!.DotInTrigon(ArrDot[j]!!)){\r\n                                                            println(\"входит в треугольник ${i} (${ArrTri[i]!!.Dot1.x};${ArrTri[i]!!.Dot1.y}) (${ArrTri[i]!!.Dot2.x};${ArrTri[i]!!.Dot2.y}) (${ArrTri[i]!!.Dot3.x};${ArrTri[i]!!.Dot3.y})\")\r\n                                                        }\r\n                                                        else{\r\n                                                            println(\"не входит в треугольник ${i} (${ArrTri[i]!!.Dot1.x};${ArrTri[i]!!.Dot1.y}) (${ArrTri[i]!!.Dot2.x};${ArrTri[i]!!.Dot2.y}) (${ArrTri[i]!!.Dot3.x};${ArrTri[i]!!.Dot3.y})\")\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        if (haveLetter(j.split(\";\"))){\r\n                                                            println(\"Точки ${j} нет\")\r\n                                                            continue\r\n                                                        }\r\n                                                        else{\r\n                                                            var jj = j.split(\";\")\r\n                                                            print(\"Точка (${jj[0]};${jj[1]}) \")\r\n                                                            if (ArrTri[i]!!.DotInTrigon(Dot(jj[0].toDouble(),jj[1].toDouble()))){\r\n                                                                println(\"входит в треугольник ${i} (${ArrTri[i]!!.Dot1.x};${ArrTri[i]!!.Dot1.y}) (${ArrTri[i]!!.Dot2.x};${ArrTri[i]!!.Dot2.y}) (${ArrTri[i]!!.Dot3.x};${ArrTri[i]!!.Dot3.y})\")\r\n                                                            }\r\n                                                            else{\r\n                                                                println(\"не входит в треугольник ${i} (${ArrTri[i]!!.Dot1.x};${ArrTri[i]!!.Dot1.y}) (${ArrTri[i]!!.Dot2.x};${ArrTri[i]!!.Dot2.y}) (${ArrTri[i]!!.Dot3.x};${ArrTri[i]!!.Dot3.y})\")\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            else{\r\n                                                println(\"Треугольника ${i} нет\")\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    \"2\"->{\r\n                                        while(true){\r\n                                            println(\"\\n\\n./реугольники/Точка в треугольнике/По трем точкам\")\r\n                                            println(\"Введите координаты точек теругольника вида '1;2' через пробел\")\r\n                                            println(\"Выход - '/'\")\r\n                                            val cc = readln().split(\" \")\r\n                                            if ('/' in cc.joinToString(\"\").toCharArray()){\r\n                                                break\r\n                                            }\r\n                                            if (!haveLetter(cc)){\r\n                                                if (cc.size>2){\r\n                                                    val dot1 = Dot(cc[0].split(\";\")[0].toDouble(),cc[0].split(\";\")[1].toDouble())\r\n                                                    val dot2 = Dot(cc[1].split(\";\")[0].toDouble(),cc[1].split(\";\")[1].toDouble())\r\n                                                    val dot3 = Dot(cc[2].split(\";\")[0].toDouble(),cc[2].split(\";\")[1].toDouble())\r\n                                                    while (true){\r\n                                                        if (ArrDot.size !=0){\r\n                                                            println(\"Есть такие точки:\")\r\n                                                            for (pppp in ArrDot.keys){\r\n                                                                println(\"${pppp} (${ArrDot[pppp]!!.x};${ArrDot[pppp]!!.y})\")\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            println(\"Точек нет\")\r\n                                                        }\r\n                                                        println(\"Треугольник с координатами (${dot1.x};${dot1.y}) (${dot2.x};${dot2.y}) (${dot3.x};${dot3.y})\")\r\n                                                        println(\"Введите точки из списка или коорднаты в формате '1;2' через пробел\")\r\n                                                        println(\"Выход - '/'\")\r\n                                                        var dots = readln().split(\" \")\r\n                                                        if ('/' in dots.joinToString(\"\").toCharArray()){\r\n                                                            break\r\n                                                        }\r\n                                                        for (i in dots){\r\n                                                            if (i in ArrDot.keys){\r\n                                                                print(\"Точка ${i} (${ArrDot[i]!!.x};${ArrDot[i]!!.x}) \")\r\n                                                                if (Trigon(dot1,dot2,dot3).DotInTrigon(ArrDot[i]!!)){\r\n                                                                    println(\"входит в треугольник (${dot1.x};${dot1.y}) (${dot2.x};${dot2.y}) (${dot3.x};${dot3.y})\")\r\n                                                                }\r\n                                                                else{\r\n                                                                    println(\"не входит в треугольник (${dot1.x};${dot1.y}) (${dot2.x};${dot2.y}) (${dot3.x};${dot3.y})\")\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                if (haveLetter(i.split(\";\"))){\r\n                                                                    println(\"Точки ${i} нет\")\r\n                                                                    continue\r\n                                                                }\r\n                                                                else{\r\n                                                                    var jj = i.split(\";\")\r\n                                                                    print(\"Точка (${jj[0]};${jj[1]}) \")\r\n                                                                    if (Trigon(dot1,dot2,dot3).DotInTrigon(Dot(jj[0].toDouble(),jj[1].toDouble()))){\r\n                                                                        println(\"входит в треугольник (${dot1.x};${dot1.y}) (${dot2.x};${dot2.y}) (${dot3.x};${dot3.y})\")\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        println(\"не входит в треугольник (${dot1.x};${dot1.y}) (${dot2.x};${dot2.y}) (${dot3.x};${dot3.y})\")\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n\r\n                                                }\r\n                                                else{\r\n                                                    println(\"Недостаточно координат\")\r\n                                                }\r\n                                            }\r\n                                            else{\r\n                                                println(\"Неправильно указаны координаты\")\r\n                                            }\r\n                                        }\r\n\r\n                                    }\r\n                                    \"3\",\"/\"->{\r\n                                        break\r\n                                    }\r\n                                    else->{\r\n                                        println(\"Неизветный выбор\")\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        \"3\" -> {}\r\n                        \"4\" -> {}\r\n                        \"5\" -> {}\r\n                        \"6\" -> {}\r\n                        \"7\" -> {}\r\n                        \"8\",\"/\" -> {break}\r\n\r\n                        else -> println(\"Такого варианта нет\")\r\n                    }\r\n                }\r\n            }\r\n\r\n            \"3\",\"/\" -> {break}\r\n\r\n            else -> println(\"Такого варианта нет\")\r\n        }\r\n    }\r\n    val d1:Dot = Dot(1,2)\r\n    val d2 = Dot(4,5)\r\n    val d3 = Dot(5,2)\r\n    val dIn = Dot(3,3)\r\n    val dOut = Dot(2,5)\r\n    val len1 = d1.lenght(d2)\r\n    val len2 = d2.lenght(d3)\r\n    val len3 = d3.lenght(d1)\r\n    val tri1:Trigon = Trigon(d1,d2,d3)\r\n    val tri2 = Trigon(1,1,2,2,3,4)\r\n    val TriS = tri1.Square\r\n    val R = (len1 * len2 * len3) / (4 * TriS)\r\n//    x = ((b^2 + c^2 - a^2) / (2 * b * c)) * x1 + ((c^2 + a^2 - b^2) / (2 * c * a)) * x2 + ((a^2 + b^2 - c^2) / (2 * a * b)) * x3\r\n//    val xCirc = ((pow(len2,2.0) ))\r\n//    y = ((b^2 + c^2 - a^2) / (2 * b * c)) * y1 + ((c^2 + a^2 - b^2) / (2 * c * a)) * y2 + ((a^2 + b^2 - c^2) / (2 * a * b)) * y3\r\n    println(\"Длина между точками ${d1.x} ${d1.y} и ${d2.x} ${d2.y} равна ${len1}\")\r\n    println(\"Длина между точками ${d2.x} ${d2.y} и ${d3.x} ${d3.y} равна ${len2}\")\r\n    println(\"Длина между точками ${d3.x} ${d3.y} и ${d1.x} ${d1.y} равна ${len3}\")\r\n    println(\"Площадь треугольника с точками ${d1.x} ${d1.y}, ${d2.x} ${d2.y} и ${d3.x} ${d3.y} равна ${TriS}\")\r\n    if (tri1.DotInTrigon(dIn,0.0001)){\r\n        println(\"Точка ${dIn.x} ${dIn.y} находится в треугольнике с точками ${d1.x} ${d1.y}, ${d2.x} ${d2.y} и ${d3.x} ${d3.y}\")\r\n    }\r\n    else{\r\n        println(\"Точка ${dIn.x} ${dIn.y} не находится в треугольнике с точками ${d1.x} ${d1.y}, ${d2.x} ${d2.y} и ${d3.x} ${d3.y}\")\r\n    }\r\n    if (tri1.DotInTrigon(dOut,0.0001)){\r\n        println(\"Точка ${dOut.x} ${dOut.y} находится в треугольнике с точками ${d1.x} ${d1.y}, ${d2.x} ${d2.y} и ${d3.x} ${d3.y}\")\r\n    }\r\n    else{\r\n        println(\"Точка ${dOut.x} ${dOut.y} не находится в треугольнике с точками ${d1.x} ${d1.y}, ${d2.x} ${d2.y} и ${d3.x} ${d3.y}\")\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/Main.kt b/src/main/kotlin/Main.kt
--- a/src/main/kotlin/Main.kt	
+++ b/src/main/kotlin/Main.kt	
@@ -1,6 +1,8 @@
 import java.lang.Math.pow
 import kotlin.math.sqrt
 fun main() {
+
+
     val ArrDot = mutableMapOf("A" to Dot(2,8),"B" to Dot(5,3),"C" to Dot(10,7),"D" to Dot(-6,3),"E" to Dot(5,1),"F" to Dot(-1,-2))
     val ArrTri:MutableMap<String,Trigon> = mutableMapOf()
     ArrTri+=("ABC" to Trigon(ArrDot["A"]!!, ArrDot["B"]!!, ArrDot["C"]!!))
@@ -368,7 +370,7 @@
             "2" -> {
                 //Посмотреть имеющиеся треугольники, по умолчанию есть 2+
                 //Узнать входит ли точка в треугольник+
-                //Узнать центр описанной окружности
+                //Узнать центр описанной окружности+
                 //Узнать центр выписанной окружности
                 //Изменить имеющийся треугольник(его координаты) на выбор
                 //Добавить треугольник
@@ -591,8 +593,89 @@
                             }
 
                         }
-                        "3" -> {}
-                        "4" -> {}
+                        "3" -> { //Узнать центр описанной окружности
+                            while(true){
+                                println("\n\n./Треугольники/Описанная окружность")
+                                printTri(ArrTri)
+                                println("Введите треугольники, точки описанных окружностей вы хотите узнать")
+                                println("Или введите три координаты треугольника, через пробел")
+                                println("Выход -'/'")
+                                val inter = readln().split(" ")
+                                if('/' in inter.joinToString("").toCharArray()){
+                                    break
+                                }
+                                var contin = 0
+                                for (i in inter){
+                                    if (contin!=0){
+                                        contin--
+                                        continue
+                                    }
+                                    if (i in ArrTri.keys){ //если есть в списке
+                                        println("Точка описывающей окружности в треугольнике ${i} (${ArrTri[i]!!.outCirle.x};${ArrTri[i]!!.outCirle.y})")
+                                    }
+                                    else{ // нет в списке треугольников т.е напрвильно введен треугольник или координаты
+                                        if (haveLetter(inter.slice(inter.indexOf(i)..inter.indexOf(i)))){
+                                            println("Треугольника по имени ${i} нет")
+                                            continue
+                                        }
+                                        if (haveLetter(inter.slice(inter.indexOf(i)..inter.indexOf(i)+2))){
+                                            println("Неверно введены координаты")
+                                            continue
+                                        }
+                                        else{//координаты введены верно
+                                            val cd1 = i.split(";")
+                                            val cd2 = inter[inter.indexOf(i)+1].split(";")
+                                            val cd3 = inter[inter.indexOf(i)+2].split(";")
+                                            val Trig = Trigon(cd1[0].toDouble(),cd1[1].toDouble(),cd2[0].toDouble(),cd2[1].toDouble(),cd3[0].toDouble(),cd3[1].toDouble())
+                                            contin=2 // пропуск 2 следующих координат
+                                            println("Точка описывающей окружности в треугольнике (${Trig.Dot1.x};${Trig.Dot1.y}) (${Trig.Dot2.x};${Trig.Dot2.y}) (${Trig.Dot3.x};${Trig.Dot3.y}) (${Trig.outCirle.x};${Trig.outCirle.y})")
+                                        }
+                                    }
+                                }
+                            }
+
+                        }
+                        "4" -> { //Узнать центр выписанной окружности
+                            while(true){
+                                println("\n\n./Треугольники/Вписанная окружность")
+                                printTri(ArrTri)
+                                println("Введите треугольники, точки описанных окружностей вы хотите узнать")
+                                println("Или введите три координаты треугольника, через пробел")
+                                println("Выход -'/'")
+                                val inter = readln().split(" ")
+                                if('/' in inter.joinToString("").toCharArray()){
+                                    break
+                                }
+                                var contin = 0
+                                for (i in inter){
+                                    if (contin!=0){
+                                        contin--
+                                        continue
+                                    }
+                                    if (i in ArrTri.keys){ //если есть в списке
+                                        println("Точка Вписанной окружности в треугольнике ${i} (${ArrTri[i]!!.inCircle.x};${ArrTri[i]!!.inCircle.y})")
+                                    }
+                                    else{ // нет в списке треугольников т.е напрвильно введен треугольник или координаты
+                                        if (haveLetter(inter.slice(inter.indexOf(i)..inter.indexOf(i)))){
+                                            println("Треугольника по имени ${i} нет")
+                                            continue
+                                        }
+                                        if (haveLetter(inter.slice(inter.indexOf(i)..inter.indexOf(i)+2))){
+                                            println("Неверно введены координаты")
+                                            continue
+                                        }
+                                        else{//координаты введены верно
+                                            val cd1 = i.split(";")
+                                            val cd2 = inter[inter.indexOf(i)+1].split(";")
+                                            val cd3 = inter[inter.indexOf(i)+2].split(";")
+                                            val Trig = Trigon(cd1[0].toDouble(),cd1[1].toDouble(),cd2[0].toDouble(),cd2[1].toDouble(),cd3[0].toDouble(),cd3[1].toDouble())
+                                            contin=2 // пропуск 2 следующих координат
+                                            println("Точка описывающей окружности в треугольнике (${Trig.Dot1.x};${Trig.Dot1.y}) (${Trig.Dot2.x};${Trig.Dot2.y}) (${Trig.Dot3.x};${Trig.Dot3.y}) (${Trig.inCircle.x};${Trig.inCircle.y})")
+                                        }
+                                    }
+                                }
+                            }
+                        }
                         "5" -> {}
                         "6" -> {}
                         "7" -> {}
